// <auto-generated />
using System;
using ELCAPITAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ELCAPITAL.Migrations
{
    [DbContext(typeof(ELCAPITALContext))]
    [Migration("20230217094533_Dbv1")]
    partial class Dbv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ELCAPITAL.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<int>("NumeroDocumento")
                        .HasColumnType("int");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");

                    b.HasDiscriminator<string>("TipoCliente").HasValue("Cliente");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ELCAPITAL.Models.FormularioRaiz", b =>
                {
                    b.Property<int>("IdFormularioRaiz")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormularioRaiz"));

                    b.Property<DateTime>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.HasKey("IdFormularioRaiz");

                    b.HasIndex("IdSolicitud")
                        .IsUnique();

                    b.ToTable("FormularioRaizs");
                });

            modelBuilder.Entity("ELCAPITAL.Models.FormularioRechazo", b =>
                {
                    b.Property<int>("IdFormularioRechazo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFormularioRechazo"));

                    b.Property<DateTime>("FechaRechazo")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFormularioRechazo");

                    b.HasIndex("IdSolicitud")
                        .IsUnique();

                    b.ToTable("FormularioRechazos");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CualProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCliente");

                    b.ToTable("Producto");

                    b.HasDiscriminator<string>("CualProducto").HasValue("Producto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ELCAPITAL.Models.Restriccion", b =>
                {
                    b.Property<int>("IdRestriccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRestriccion"));

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRestriccion");

                    b.HasIndex("IdCliente");

                    b.ToTable("Restriccions");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<bool>("EsAprobada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<string>("TipoSolicitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSolicitud");

                    b.HasIndex("IdCliente");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("ELCAPITAL.Models.TarjetaDeCredito", b =>
                {
                    b.Property<int>("IdTarjetaDeCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarjetaDeCredito"));

                    b.Property<int>("CodigoTarjeta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdTarjetaDeCredito");

                    b.HasIndex("IdProducto");

                    b.ToTable("TarjetaDeCreditos");
                });

            modelBuilder.Entity("ELCAPITAL.Models.PersonaFisica", b =>
                {
                    b.HasBaseType("ELCAPITAL.Models.Cliente");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PersonaFisica");
                });

            modelBuilder.Entity("ELCAPITAL.Models.PersonaJuridica", b =>
                {
                    b.HasBaseType("ELCAPITAL.Models.Cliente");

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PersonJuridica");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Paquete", b =>
                {
                    b.HasBaseType("ELCAPITAL.Models.Producto");

                    b.Property<bool>("EsCrediticio")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Paquete");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Prestamo", b =>
                {
                    b.HasBaseType("ELCAPITAL.Models.Producto");

                    b.Property<bool>("EsPrendario")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Prestamo");
                });

            modelBuilder.Entity("ELCAPITAL.Models.FormularioRaiz", b =>
                {
                    b.HasOne("ELCAPITAL.Models.Solicitud", "Solicitud")
                        .WithOne("FormularioRaiz")
                        .HasForeignKey("ELCAPITAL.Models.FormularioRaiz", "IdSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("ELCAPITAL.Models.FormularioRechazo", b =>
                {
                    b.HasOne("ELCAPITAL.Models.Solicitud", "Solicitud")
                        .WithOne("FormularioRechazo")
                        .HasForeignKey("ELCAPITAL.Models.FormularioRechazo", "IdSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Producto", b =>
                {
                    b.HasOne("ELCAPITAL.Models.Cliente", "Cliente")
                        .WithMany("Productos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Restriccion", b =>
                {
                    b.HasOne("ELCAPITAL.Models.Cliente", "Cliente")
                        .WithMany("Restricciones")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Solicitud", b =>
                {
                    b.HasOne("ELCAPITAL.Models.Cliente", "Cliente")
                        .WithMany("Solicitudes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ELCAPITAL.Models.TarjetaDeCredito", b =>
                {
                    b.HasOne("ELCAPITAL.Models.Paquete", "Paquete")
                        .WithMany("TarjetaDeCreditos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paquete");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Cliente", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Restricciones");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Solicitud", b =>
                {
                    b.Navigation("FormularioRaiz");

                    b.Navigation("FormularioRechazo");
                });

            modelBuilder.Entity("ELCAPITAL.Models.Paquete", b =>
                {
                    b.Navigation("TarjetaDeCreditos");
                });
#pragma warning restore 612, 618
        }
    }
}
